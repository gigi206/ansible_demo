---
# tasks file for myapp

- name: MyAPP
  tags: MyAPP
  block:
    # - name: Install demo app
    #   ansible.builtin.include_tasks: "{{ role_path }}/tasks/install/demo.yaml"
    #   tags: demo_install_demo_app


    - name: Merge all file vars found
      ansible.builtin.include_vars: "{{ item }}"
      loop:
        - "{{ ansible_distribution }}/main.yml"
        - "{{ ansible_distribution }}/{{ ansible_distribution_major_version }}/main.yml"
        - "{{ ansible_distribution }}/{{ ansible_distribution_major_version }}/{{ ansible_distribution_version }}.yml"
      when:
        - ([path, item] | path_join) in query("community.general.filetree", path) | selectattr("state", "in", "file") | map(attribute="src") | list
      vars:
        path: "{{ [role_path, 'vars'] | path_join }}"


    - name: Override variables from OS-specific configuration
      ansible.builtin.set_fact:
        packages: "{{ myapp_packages | default(packages, true) }}"


    - name: Install all requirements packages
      ansible.builtin.package:
        name: "{{ packages }}"
        state: present


    # - name: Extract foo.tgz into /var/lib/foo
    #   ansible.builtin.unarchive:
    #     src: foo.tgz
    #     dest: /var/lib/foo
    #     # mode: 750
    #     # user: root
    #     # group: root
    #     # copy: false
    #     # remote_src: true

    # - name: Enable service xxx
    #   ansible.builtin.service:
    #     name: httpd
    #     enabled: yes
    #     state: started


    - name: Debugging
      ansible.builtin.debug:
        var: packages


    - name: Debugging2
      ansible.builtin.debug:
        var: myapp_myvar
